// Generated by CoffeeScript 1.10.0
var GifReader, PixelGif, PixelUtil,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

PixelUtil = (require('pixel-util')).PixelUtil;

GifReader = (require('omggif')).GifReader;

PixelGif = (function(superClass) {
  extend(PixelGif, superClass);

  function PixelGif() {
    return PixelGif.__super__.constructor.apply(this, arguments);
  }

  PixelGif.prototype.parse = function(file) {
    return this.createBuffer(file).then((function(_this) {
      return function(buffer) {
        var i, image, images, key, reader, value;
        reader = new GifReader(new Uint8Array(buffer));
        images = (function() {
          var j, ref, ref1, results;
          results = [];
          for (i = j = 0, ref = reader.numFrames(); 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
            image = this.createImageData(reader.width, reader.height);
            ref1 = reader.frameInfo(i);
            for (key in ref1) {
              value = ref1[key];
              image[key] = value;
            }
            if (image.delay) {
              image.delay = image.delay * 10;
            }
            reader.decodeAndBlitFrameRGBA(i, image.data);
            results.push(image);
          }
          return results;
        }).call(_this);
        images.loopCount = reader.loopCount();
        if (images.loopCount == null) {
          images.loopCount = -1;
        }
        return images;
      };
    })(this));
  };

  return PixelGif;

})(PixelUtil);

module.exports = new PixelGif;

module.exports.PixelGif = PixelGif;
